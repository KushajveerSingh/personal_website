"use strict";(self.webpackChunkpersonal_website=self.webpackChunkpersonal_website||[]).push([[185],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=p(r),d=a,g=u["".concat(s,".").concat(d)]||u[d]||c[d]||i;return r?n.createElement(g,o(o({ref:t},m),{},{components:r})):n.createElement(g,o({ref:t},m))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8976:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={title:"Sorting Algorithms",sidebar_label:"Sorting",pagination_label:"Sorting"},o=void 0,l={unversionedId:"algorithms/dsa/sorting",id:"algorithms/dsa/sorting",title:"Sorting Algorithms",description:"Stable v/s Unstable sorting algorithm",source:"@site/notes/algorithms/01_dsa/01_sorting.mdx",sourceDirName:"algorithms/01_dsa",slug:"/algorithms/dsa/sorting",permalink:"/personal_website/notes/algorithms/dsa/sorting",draft:!1,editUrl:"https://github.com/KushajveerSingh/personal_website/tree/main/notes/algorithms/01_dsa/01_sorting.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Sorting Algorithms",sidebar_label:"Sorting",pagination_label:"Sorting"},sidebar:"algorithms",previous:{title:"DSA",permalink:"/personal_website/notes/algorithms/dsa/"},next:{title:"Leetcode",permalink:"/personal_website/notes/algorithms/leetcode/"}},s={},p=[{value:"Insertion Sort",id:"insertion-sort",level:2}],m={toc:p},u="wrapper";function c(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Stable v/s Unstable sorting algorithm"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Stable - order of the elements is preserved"),(0,a.kt)("li",{parentName:"ul"},"Unstable - order of the elements is not preserved."),(0,a.kt)("li",{parentName:"ul"},"For example, when sorting the array ","[","4, 1(a), 3, 1(b)], the order of the 1's i.e. a and b is preserved in stable sorting algorithms.")),(0,a.kt)("h2",{id:"insertion-sort"},"Insertion Sort"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Time = ",(0,a.kt)("inlineCode",{parentName:"li"},"O(N^2)"),", Space = ",(0,a.kt)("inlineCode",{parentName:"li"},"O(1)"),", Stable"),(0,a.kt)("li",{parentName:"ul"},"Split the array into sorted (left) and unsorted (right) array."),(0,a.kt)("li",{parentName:"ul"},"Takes the maximum time if elements are sorted in reverse order."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"Insertion")," sort is used when the size of the array is small and the array is almost sorted. Like you can first start with ",(0,a.kt)("em",{parentName:"li"},"QuickSort"),", and when the subarray size get's smaller than a threshold use ",(0,a.kt)("em",{parentName:"li"},"Insertion")," sort.")),(0,a.kt)("p",null,"Example of the working"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"[","7, 8, 5, 2, 4, 6, 3] - (7) is already sorted"),(0,a.kt)("li",{parentName:"ul"},"[","7, 8, 5, 2, 4, 6, 3]"),(0,a.kt)("li",{parentName:"ul"},"[","5, 7, 8, 2, 4, 6, 3]")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:"showLineNumbers",showLineNumbers:!0},'def insertion_sort(x):\n    if len(x) == 0:\n        return x\n\n    for i in range(1, len(x)):\n        # We want to place the current element "x[i]" in the correct position\n        # in the left subarry\n        key = x[i]\n\n        # Swap the elements till you find the correct position to place "key"\n        j = i - 1\n        while j >= 0 and x[j] > key:\n            x[j+1] = x[j]\n            j = j - 1\n        x[j+1] = key\n\n    return x\n')))}c.isMDXComponent=!0}}]);